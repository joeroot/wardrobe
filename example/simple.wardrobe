# Declaration of Person class with property name and methods
# setName and getName.
class Person
  String name

  method setName(String name)
    this.name = name
  end

  method getName()
    return this.name
  end
end

# Class Teenager inherits all methods and properites from its
# parent class, Person. Can methodine additional properties and
# methods, in this case, age, setAge and getAge. Additionally
# an create method can be used for when creating an object of a
# class. In this case, all Teenagers are intialised with an 
# age.
class Teenager extends Person
  Number age

  method create(String name, Number age)
    this.name = name
    this.age = age
  end

  method setAge(Number age)
    this.age = age
  end

  method getAge()
    this.age
  end

  method setAgeAndName(String name, Number age)
    this.setName(name)
    this.setAge(age)
  end
end

# Mathematical precedence.
Number n1 = 10.5.add(2.multiply(3.divide(4)))
Number n2 = 10.5+2*3/4

print(n1)

if (n1 == n2)
    print("Numbers are equal")
else
    print("Numbers are not equal")
end

# Create a new person object then call setName on it.
Person p = Person.new()
print(p)
p.setName("Doe")
print(p)

String f = "John"
f = f & " " & p.getName()
print(p.getName())

print("Length of " & f & " is " & f.length().toString())

# Teenager is createialised with an age of 15.
Teenager t = Teenager.new(age: 15, name: "Root")
print(t)
t.setName("Smith")
print(t)

Teenager t1 = t;
t1.setName("Chan");
Teenager t2 = Teenager.new(age: 17, name: "Khan");

print(t1 == t)
print(t1 == t2)

# Can change intialised age with parent's setAge method.
t.setAge(13)
print(t.getAge())

t.setAgeAndName(name: "Watson", age: 19)
print(t)

List l = [4..10]
print(l[0])
l.set(index:3, to:11)
l[4] = 12
l

